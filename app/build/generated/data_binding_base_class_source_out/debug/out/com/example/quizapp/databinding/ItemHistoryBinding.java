// Generated by view binder compiler. Do not edit!
package com.example.quizapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.quizapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHistoryBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView tvCategoryName;

  @NonNull
  public final TextView tvCorrectAnswers;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvScore;

  @NonNull
  public final TextView tvTimeTaken;

  private ItemHistoryBinding(@NonNull MaterialCardView rootView, @NonNull TextView tvCategoryName,
      @NonNull TextView tvCorrectAnswers, @NonNull TextView tvDate, @NonNull TextView tvScore,
      @NonNull TextView tvTimeTaken) {
    this.rootView = rootView;
    this.tvCategoryName = tvCategoryName;
    this.tvCorrectAnswers = tvCorrectAnswers;
    this.tvDate = tvDate;
    this.tvScore = tvScore;
    this.tvTimeTaken = tvTimeTaken;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvCategoryName;
      TextView tvCategoryName = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryName == null) {
        break missingId;
      }

      id = R.id.tvCorrectAnswers;
      TextView tvCorrectAnswers = ViewBindings.findChildViewById(rootView, id);
      if (tvCorrectAnswers == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvScore;
      TextView tvScore = ViewBindings.findChildViewById(rootView, id);
      if (tvScore == null) {
        break missingId;
      }

      id = R.id.tvTimeTaken;
      TextView tvTimeTaken = ViewBindings.findChildViewById(rootView, id);
      if (tvTimeTaken == null) {
        break missingId;
      }

      return new ItemHistoryBinding((MaterialCardView) rootView, tvCategoryName, tvCorrectAnswers,
          tvDate, tvScore, tvTimeTaken);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
